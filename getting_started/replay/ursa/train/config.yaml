defaults:
  - data: zarr
  - dataloader: native_grid
  - diagnostics: evaluation
  - datamodule: single
  - hardware: slurm
  - graph: encoder_decoder_only
  - model: transformer
  - training: default
  - _self_

# set to true to switch on config validation
config_validation: True

dataloader:
  dataset: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data/training.zarr
  batch_size:
    # note that the batch_size is set locally, so
    # global_batch_size = num_nodes * num_gpus_per_node * batch_size / num_gpus_per_model
    training: 1
    validation: 1
    test: 1
  training:
    dataset: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data/training.zarr
    start: 1994
    end: 1994
    frequency: ${data.frequency}
    drop: []
  validation:
    dataset: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data/validation.zarr
    start: 1995
    end: 1995
    frequency: ${data.frequency}
    drop: []
  test:
    dataset: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data/testing.zarr
    start: 1996
    end: 1996
    frequency: ${data.frequency}
    drop: []

diagnostics:
  plot:
    frequency:
      batch: 5_000
      epoch: 1

hardware:
  num_gpus_per_model: 1
  paths:
    output: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/train/training/training-output/
    data: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data
    graph: /scratch4/NAGAPE/epic/Wei.Huang/src/global-eagle/getting_started/replay/ursa/data
  files:
    dataset: training.zarr

model:
  # turn these down for a hello world setup
  num_channels: 128
  processor:
    num_layers: 8

training:
  max_steps: 1_000
